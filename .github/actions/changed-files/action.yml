name: "Find Changed Files"
description: "Get a list of changed files in a specific directory matching a pattern."

inputs:
  directory:
    description: "The directory to check for changes (e.g., src)."
    required: false
    default: "."
  patterns:
    description: 'A comma-delimited string of filename patterns (e.g., "*.js,*.css").'
    required: true
    default: "*"
  base-sha:
    description: "The base SHA to compare against"
    required: true
    default: HEAD~1

outputs:
  files:
    description: "A newline-separated string of the changed files."
    value: ${{ steps.get-changed-files.outputs.files }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        clean: false
        sparse-checkout: |
          .github/actions/changed-files

    - id: get-changed-files
      env:
        PATTERN_ARRAY: ${{ inputs.patterns }}
        DIRECTORY: ${{ inputs.directory }}
        BASE_SHA: ${{ inputs.base-sha }}
      run: |
        IFS=',' read -r -a pattern_array <<< "${PATTERN_ARRAY}"

        # Final array to hold the full pathspecs.
        pathspec_array=()
        for pattern in "${pattern_array[@]}"; do
            # Trim leading/trailing whitespace from each pattern (e.g., " *.js " -> "*.js").
            trimmed_pattern=$(echo "$pattern" | xargs)
            # Add the directory and cleaned pattern to the array, ignoring empty entries.
            if [[ -n "$trimmed_pattern" ]]; then
                pathspec_array+=("${DIRECTORY}/$trimmed_pattern")
            fi
        done

        # Combine directory and pattern into a pathspec for git
        echo "Checking for changed files with pathspecs: ${pathspec_array[@]}"

        # Pass the array of pathspecs to git diff. The quotes are essential.
        CHANGED_FILES=$(git diff --name-only $BASE_SHA..HEAD -- "${pathspec_array[@]}")

        if [[ -n "$CHANGED_FILES" ]]; then
            # Trim the directory prefix from the beginning of each file path.
            TRIMMED_PATHS=$(echo "$CHANGED_FILES" | sed "s|^${DIRECTORY}/||")

            echo "âœ… Found changed files (paths relative to directory):"
            echo "$TRIMMED_PATHS"

            echo 'files<<EOF' >> "$GITHUB_OUTPUT"
            echo "$TRIMMED_PATHS" | paste -sd ' ' - >> "$GITHUB_OUTPUT"
            echo 'EOF' >> "$GITHUB_OUTPUT"
        else
            echo "No changed files found for the given pathspec."
            echo "files=" >> "$GITHUB_OUTPUT"
        fi
      shell: bash
